// FILE: api/prisma/schema.prisma
// Encoding: UTF-8 (no BOM), EOL: LF

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/**
 * Optional: keep Role enum only if you use it in a model.
 * Having an unused enum is fine; Prisma allows it.
 */
enum Role {
  ADMIN
  DISPATCHER
  FIELDTECH
  VIEWER

  @@map("Role") // map Prisma enum to existing Postgres enum "Role"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  role      Role     @default(VIEWER) // use the enum, matches DB default
}

model Asset {
  id        Int        @id @default(autoincrement())
  // DB shows: type, name, status (all NOT NULL)
  type      String
  name      String
  status    String
  // DB shows lon/lat NOT NULL (double precision)
  lon       Float
  lat       Float
  createdAt DateTime   @default(now()) // DB shows CURRENT_TIMESTAMP
  updatedAt DateTime   @default(now()) @updatedAt
  incidents Incident[]
}

model Incident {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  priority    String   @db.Text // normalized to TEXT via SQL
  status      String   @db.Text // normalized to TEXT via SQL
  reporterId  Int
  assetId     Int?
  lon         Float
  lat         Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  asset Asset? @relation(fields: [assetId], references: [id])
}
